
package notepad_application;

import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.*;
import javax.swing.JFileChooser;
import java.util.Scanner;
import javax.swing.JOptionPane;
/**
 *
 * @author 0_o
 */
public class ntpd extends javax.swing.JFrame {
           boolean flag=false;
           String filename="Untitled",progname="Notepad";
          
           JFileChooser chooser = new JFileChooser();
           int option;
    /**
     * Creates new form ntpd
     */
    public ntpd() {
        initComponents();
        
    }
    public void setCenterScreen(){
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mbarFile = new javax.swing.JMenu();
        mitemNew = new javax.swing.JMenuItem();
        mitemOpen = new javax.swing.JMenuItem();
        mitemSave = new javax.swing.JMenuItem();
        mitemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notepad");
        setPreferredSize(new java.awt.Dimension(500, 600));
        setSize(new java.awt.Dimension(500, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        getContentPane().add(jScrollPane1);

        mbarFile.setText("File");

        mitemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mitemNew.setText("New");
        mitemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemNewActionPerformed(evt);
            }
        });
        mbarFile.add(mitemNew);

        mitemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mitemOpen.setText("Open...");
        mitemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemOpenActionPerformed(evt);
            }
        });
        mbarFile.add(mitemOpen);

        mitemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mitemSave.setText("Save...");
        mitemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemSaveActionPerformed(evt);
            }
        });
        mbarFile.add(mitemSave);

        mitemExit.setText("Exit");
        mitemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemExitActionPerformed(evt);
            }
        });
        mbarFile.add(mitemExit);

        jMenuBar1.add(mbarFile);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        
    
    private void mitemNewActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
                     txtArea.setText("");
                     filename="Untitled";
                     setTitle(filename +" - " +progname);
    }                                        

    private void mitemOpenActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
                     openFile();	
    }                                         

    private void mitemSaveActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
                    saveFile();	
    }                                         

    private void mitemExitActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
                    exitFile();
    }                                         

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        // TODO add your handling code here:
        exitFile();
    }                                  
    public void exitFile(){
                     if(  txtArea.getSelectionStart()!=0 && flag==false){
                                    int select = JOptionPane.showConfirmDialog(ntpd.this,
                                    "Do you want to save changes to "+filename+"?",
                                    "Notepad", JOptionPane.YES_NO_CANCEL_OPTION,
                                    JOptionPane.WARNING_MESSAGE, null);
                                    if(select == JOptionPane.YES_OPTION){
                                            saveFile();
                                            System.exit(1);
                                    }else if(select==JOptionPane.CANCEL_OPTION){
                                            txtArea.setCaretPosition(txtArea.getCaretPosition());
                                    }else{
                                            System.exit(1);
                                    }
                     }else{
                         System.exit(1);
                     }
    }
    public void openFile(){
                    option = chooser.showOpenDialog(this);
                    if (option == JFileChooser.APPROVE_OPTION){
		txtArea.setText("");
		try{
                                                    filename = chooser.getSelectedFile().getPath();
                                                    Scanner scan = new Scanner(new FileReader(filename));
                                                    setTitle(filename+" - "+progname);
                                                    while (scan.hasNext())
                                                    txtArea.append(scan.nextLine());
		} catch (Exception ex){
                                                    System.out.println(ex.getMessage());
		}         
	}
                   
}
 
   public void saveFile(){
                    option = chooser.showSaveDialog(this);
                   
                    if (option == JFileChooser.APPROVE_OPTION){
		try {
                                                    filename = chooser.getSelectedFile().getPath();
                                                    BufferedWriter out = new BufferedWriter(new FileWriter(filename));
                                                    out.write(txtArea.getText());
                                                    out.close();
                                                    setTitle(filename+" - "+progname);
                                                    flag=true;
		} catch (Exception ex) {
                                                    System.out.println(ex.getMessage());
		}
                                          
                     }      
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ntpd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ntpd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ntpd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ntpd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                        ntpd n = new ntpd();                                    
                        n.setVisible(true);
                        n.setCenterScreen();
                }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mbarFile;
    private javax.swing.JMenuItem mitemExit;
    private javax.swing.JMenuItem mitemNew;
    private javax.swing.JMenuItem mitemOpen;
    private javax.swing.JMenuItem mitemSave;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration                   
}
